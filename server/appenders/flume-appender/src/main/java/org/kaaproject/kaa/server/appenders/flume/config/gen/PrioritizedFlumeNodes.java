/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.kaaproject.kaa.server.appenders.flume.config.gen;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class PrioritizedFlumeNodes extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PrioritizedFlumeNodes\",\"namespace\":\"org.kaaproject.kaa.server.appenders.flume.config.gen\",\"fields\":[{\"name\":\"flumeNodes\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"PrioritizedFlumeNode\",\"fields\":[{\"name\":\"host\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"displayName\":\"Host\",\"weight\":0.8,\"by_default\":\"localhost\"},{\"name\":\"port\",\"type\":\"int\",\"displayName\":\"Port\",\"weight\":0.1,\"by_default\":7070},{\"name\":\"priority\",\"type\":\"int\",\"displayName\":\"Priority\",\"weight\":0.1,\"by_default\":1}]}},\"displayName\":\"Flume nodes\",\"minRowCount\":1}],\"displayName\":\"Prioritized\"}");
  private java.util.List<org.kaaproject.kaa.server.appenders.flume.config.gen.PrioritizedFlumeNode> flumeNodes;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use {@link \#newBuilder()}.
   */
  public PrioritizedFlumeNodes() {
  }

  /**
   * All-args constructor.
   */
  public PrioritizedFlumeNodes(java.util.List<org.kaaproject.kaa.server.appenders.flume.config.gen.PrioritizedFlumeNode> flumeNodes) {
    this.flumeNodes = flumeNodes;
  }

  public static org.apache.avro.Schema getClassSchema() {
    return SCHEMA$;
  }

  /**
   * Creates a new PrioritizedFlumeNodes RecordBuilder
   */
  public static org.kaaproject.kaa.server.appenders.flume.config.gen.PrioritizedFlumeNodes.Builder newBuilder() {
    return new org.kaaproject.kaa.server.appenders.flume.config.gen.PrioritizedFlumeNodes.Builder();
  }

  /**
   * Creates a new PrioritizedFlumeNodes RecordBuilder by copying an existing Builder
   */
  public static org.kaaproject.kaa.server.appenders.flume.config.gen.PrioritizedFlumeNodes.Builder newBuilder(org.kaaproject.kaa.server.appenders.flume.config.gen.PrioritizedFlumeNodes.Builder other) {
    return new org.kaaproject.kaa.server.appenders.flume.config.gen.PrioritizedFlumeNodes.Builder(other);
  }

  /**
   * Creates a new PrioritizedFlumeNodes RecordBuilder by copying an existing PrioritizedFlumeNodes
   * instance
   */
  public static org.kaaproject.kaa.server.appenders.flume.config.gen.PrioritizedFlumeNodes.Builder newBuilder(org.kaaproject.kaa.server.appenders.flume.config.gen.PrioritizedFlumeNodes other) {
    return new org.kaaproject.kaa.server.appenders.flume.config.gen.PrioritizedFlumeNodes.Builder(other);
  }

  public org.apache.avro.Schema getSchema() {
    return SCHEMA$;
  }

  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
      case 0:
        return flumeNodes;
      default:
        throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value = "unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
      case 0:
        flumeNodes = (java.util.List<org.kaaproject.kaa.server.appenders.flume.config.gen.PrioritizedFlumeNode>) value$;
        break;
      default:
        throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'flumeNodes' field.
   */
  public java.util.List<org.kaaproject.kaa.server.appenders.flume.config.gen.PrioritizedFlumeNode> getFlumeNodes() {
    return flumeNodes;
  }

  /**
   * Sets the value of the 'flumeNodes' field.
   *
   * @param value the value to set.
   */
  public void setFlumeNodes(java.util.List<org.kaaproject.kaa.server.appenders.flume.config.gen.PrioritizedFlumeNode> value) {
    this.flumeNodes = value;
  }

  /**
   * RecordBuilder for PrioritizedFlumeNodes instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PrioritizedFlumeNodes>
      implements org.apache.avro.data.RecordBuilder<PrioritizedFlumeNodes> {

    private java.util.List<org.kaaproject.kaa.server.appenders.flume.config.gen.PrioritizedFlumeNode> flumeNodes;

    /**
     * Creates a new Builder
     */
    private Builder() {
      super(org.kaaproject.kaa.server.appenders.flume.config.gen.PrioritizedFlumeNodes.SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder
     */
    private Builder(org.kaaproject.kaa.server.appenders.flume.config.gen.PrioritizedFlumeNodes.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.flumeNodes)) {
        this.flumeNodes = data().deepCopy(fields()[0].schema(), other.flumeNodes);
        fieldSetFlags()[0] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing PrioritizedFlumeNodes instance
     */
    private Builder(org.kaaproject.kaa.server.appenders.flume.config.gen.PrioritizedFlumeNodes other) {
      super(org.kaaproject.kaa.server.appenders.flume.config.gen.PrioritizedFlumeNodes.SCHEMA$);
      if (isValidValue(fields()[0], other.flumeNodes)) {
        this.flumeNodes = data().deepCopy(fields()[0].schema(), other.flumeNodes);
        fieldSetFlags()[0] = true;
      }
    }

    /**
     * Gets the value of the 'flumeNodes' field
     */
    public java.util.List<org.kaaproject.kaa.server.appenders.flume.config.gen.PrioritizedFlumeNode> getFlumeNodes() {
      return flumeNodes;
    }

    /**
     * Sets the value of the 'flumeNodes' field
     */
    public org.kaaproject.kaa.server.appenders.flume.config.gen.PrioritizedFlumeNodes.Builder setFlumeNodes(java.util.List<org.kaaproject.kaa.server.appenders.flume.config.gen.PrioritizedFlumeNode> value) {
      validate(fields()[0], value);
      this.flumeNodes = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
     * Checks whether the 'flumeNodes' field has been set
     */
    public boolean hasFlumeNodes() {
      return fieldSetFlags()[0];
    }

    /**
     * Clears the value of the 'flumeNodes' field
     */
    public org.kaaproject.kaa.server.appenders.flume.config.gen.PrioritizedFlumeNodes.Builder clearFlumeNodes() {
      flumeNodes = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public PrioritizedFlumeNodes build() {
      try {
        PrioritizedFlumeNodes record = new PrioritizedFlumeNodes();
        record.flumeNodes = fieldSetFlags()[0] ? this.flumeNodes : (java.util.List<org.kaaproject.kaa.server.appenders.flume.config.gen.PrioritizedFlumeNode>) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
