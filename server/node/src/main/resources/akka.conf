#Count of workers in IO router 
io_worker_count = 4

#Inactivity timeout for global endpoint actor
global_endpoint_actor_timeout = 600000
#Inactivity timeout for local endpoint actor
local_endpoint_actor_timeout = 600000
#Inactivity timeout for endpoint events
endpoint_event_timeout =  60000

akka {
  # JVM shutdown, System.exit(-1), in case of a fatal error,
  # such as OutOfMemoryError
  jvm-exit-on-fatal-error = off

  loggers = ["akka.event.slf4j.Slf4jLogger"]
}

# This dispatcher is used for encoding and decoding of transport messages
io-dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
      # Min number of threads to cap factor-based parallelism number to
      parallelism-min = 2
      # Max number of threads to cap factor-based parallelism number to
      parallelism-max = 12
      
      # The parallelism factor is used to determine thread pool size using the
      # following formula: ceil(available processors * factor). Resulting size
      # is then bounded by the parallelism-min and parallelism-max values.
      parallelism-factor = 1.0
  }
  # How long time the dispatcher will wait for new actors until it shuts down
  shutdown-timeout = 1s
  
  # Throughput defines the number of messages that are processed in a batch
  # before the thread is returned to the pool. Set to 1 for as fair as possible.
  throughput = 5
}

# Core dispatcher for root, tenant and application actors
core-dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
      # Min number of threads to cap factor-based parallelism number to
      parallelism-min = 1
      # Max number of threads to cap factor-based parallelism number to
      parallelism-max = 2
      
      # The parallelism factor is used to determine thread pool size using the
      # following formula: ceil(available processors * factor). Resulting size
      # is then bounded by the parallelism-min and parallelism-max values.
      parallelism-factor = 1.0
  }
  # How long time the dispatcher will wait for new actors until it shuts down
  shutdown-timeout = 1s
  
  # Throughput defines the number of messages that are processed in a batch
  # before the thread is returned to the pool. Set to 1 for as fair as possible.
  throughput = 5
}

# User dispatcher for user actors
user-dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
      # Min number of threads to cap factor-based parallelism number to
      parallelism-min = 2
      # Max number of threads to cap factor-based parallelism number to
      parallelism-max = 8
      
      # The parallelism factor is used to determine thread pool size using the
      # following formula: ceil(available processors * factor). Resulting size
      # is then bounded by the parallelism-min and parallelism-max values.
      parallelism-factor = 1.0
  }
  # How long time the dispatcher will wait for new actors until it shuts down
  shutdown-timeout = 1s
  
  # Throughput defines the number of messages that are processed in a batch
  # before the thread is returned to the pool. Set to 1 for as fair as possible.
  throughput = 5
}

# Endpoint dispatcher for endpoint actors
endpoint-dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
      # Min number of threads to cap factor-based parallelism number to
      parallelism-min = 2
      # Max number of threads to cap factor-based parallelism number to
      parallelism-max = 16
      
      # The parallelism factor is used to determine thread pool size using the
      # following formula: ceil(available processors * factor). Resulting size
      # is then bounded by the parallelism-min and parallelism-max values.
      parallelism-factor = 1.0
  }
  # How long time the dispatcher will wait for new actors until it shuts down
  shutdown-timeout = 1s
  
  # Throughput defines the number of messages that are processed in a batch
  # before the thread is returned to the pool. Set to 1 for as fair as possible.
  throughput = 5
}

# User verifier dispatcher for user verifier actors
topic-dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
      # Min number of threads to cap factor-based parallelism number to
      parallelism-min = 1
      # Max number of threads to cap factor-based parallelism number to
      parallelism-max = 4
      
      # The parallelism factor is used to determine thread pool size using the
      # following formula: ceil(available processors * factor). Resulting size
      # is then bounded by the parallelism-min and parallelism-max values.
      parallelism-factor = 1.0
  }
  # How long time the dispatcher will wait for new actors until it shuts down
  shutdown-timeout = 1s
  
  # Throughput defines the number of messages that are processed in a batch
  # before the thread is returned to the pool. Set to 1 for as fair as possible.
  throughput = 5
}

# Log dispatcher for application log actors
log-dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
      # Min number of threads to cap factor-based parallelism number to
      parallelism-min = 1
      # Max number of threads to cap factor-based parallelism number to
      parallelism-max = 4
      
      # The parallelism factor is used to determine thread pool size using the
      # following formula: ceil(available processors * factor). Resulting size
      # is then bounded by the parallelism-min and parallelism-max values.
      parallelism-factor = 1.0
  }
  # How long time the dispatcher will wait for new actors until it shuts down
  shutdown-timeout = 1s
  
  # Throughput defines the number of messages that are processed in a batch
  # before the thread is returned to the pool. Set to 1 for as fair as possible.
  throughput = 5
}

# User verifier dispatcher for user verifier actors
verifier-dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
      # Min number of threads to cap factor-based parallelism number to
      parallelism-min = 1
      # Max number of threads to cap factor-based parallelism number to
      parallelism-max = 4
      
      # The parallelism factor is used to determine thread pool size using the
      # following formula: ceil(available processors * factor). Resulting size
      # is then bounded by the parallelism-min and parallelism-max values.
      parallelism-factor = 1.0
  }
  # How long time the dispatcher will wait for new actors until it shuts down
  shutdown-timeout = 1s
  
  # Throughput defines the number of messages that are processed in a batch
  # before the thread is returned to the pool. Set to 1 for as fair as possible.
  throughput = 5
}