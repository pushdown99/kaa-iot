<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2014-2016 CyberVision, Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-4.0.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop.xsd
            http://www.springframework.org/schema/data/mongo
            http://www.springframework.org/schema/data/mongo/spring-mongo.xsd
            http://www.springframework.org/schema/util
            http://www.springframework.org/schema/util/spring-util-3.0.xsd">

    <util:properties id="mongo" location="classpath:common-dao-mongodb.properties"/>

    <!-- In order to implement support of custom NoSQL platform, one should declare following mandatory beans -->

    <bean id="notificationDao" class="org.kaaproject.kaa.server.common.nosql.mongo.dao.NotificationMongoDao"/>
    <bean id="unicastNotificationDao" class="org.kaaproject.kaa.server.common.nosql.mongo.dao.EndpointNotificationMongoDao"/>
    <bean id="endpointProfileDao" class="org.kaaproject.kaa.server.common.nosql.mongo.dao.EndpointProfileMongoDao"/>
    <bean id="endpointRegistrationDao" class="org.kaaproject.kaa.server.common.nosql.mongo.dao.EndpointRegistrationMongoDao"/>
    <bean id="credentialsDao" class="org.kaaproject.kaa.server.common.nosql.mongo.dao.CredentialsMongoDao"/>
    <bean id="endpointConfigurationDao" class="org.kaaproject.kaa.server.common.nosql.mongo.dao.EndpointConfigurationMongoDao"/>
    <bean id="endpointUserDao" class="org.kaaproject.kaa.server.common.nosql.mongo.dao.EndpointUserMongoDao"/>
    <bean id="endpointUserConfigurationDao" class="org.kaaproject.kaa.server.common.nosql.mongo.dao.EndpointUserConfigurationMongoDao"/>
    <bean id="topicListEntryDao" class="org.kaaproject.kaa.server.common.nosql.mongo.dao.TopicListEntryMongoDao"/>

    <!-- End of mandatory beans declaration -->

    <mongo:mongo-client id="mongoClient" replica-set="#{mongo[servers]}">
        <mongo:client-options
                connections-per-host="#{mongo[connections_per_host]}"
                threads-allowed-to-block-for-connection-multiplier="5"
                connect-timeout="#{mongo[connection_timeout]}"
                max-wait-time="#{mongo[max_wait_time]}"
                socket-keep-alive="#{mongo[socket_keepalive]}"
                socket-timeout="#{mongo[socket_timeout]}"
                write-concern="#{mongo[write_concern]}"/>
    </mongo:mongo-client>

    <mongo:db-factory dbname="#{mongo[db_name]}" mongo-ref="mongoClient"/>

    <mongo:auditing />

    <bean id="mongoTypeMapper" class="org.springframework.data.mongodb.core.convert.DefaultMongoTypeMapper">
        <constructor-arg name="typeKey">
            <null/>
        </constructor-arg>
    </bean>

    <bean id="mongoMappingContext" class="org.springframework.data.mongodb.core.mapping.MongoMappingContext"/>

    <bean id="mongoConverter" class="org.springframework.data.mongodb.core.convert.MappingMongoConverter">
        <constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>
        <constructor-arg name="mappingContext" ref="mongoMappingContext"/>
        <property name="typeMapper" ref="mongoTypeMapper" />
    </bean>

    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>
        <constructor-arg name="mongoConverter" ref="mongoConverter"/>
        <property name="writeResultChecking" value="EXCEPTION"/>
    </bean>
</beans>
