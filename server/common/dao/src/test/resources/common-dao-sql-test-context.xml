<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2014-2016 CyberVision, Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

    <bean id="persistenceExceptionTranslationPostProcessor"
          class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <beans profile="postgres">

        <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
            <property name="dataSource" ref="dataSource"/>
            <property name="packagesToScan" value="org.kaaproject.kaa.server.common.dao.model.sql"/>
            <property name="hibernateProperties">
                <props>
                    <prop key="hibernate.hbm2ddl.auto">#{sql_dao[hibernate_hbm2ddl_auto]}</prop>
                    <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL82Dialect</prop>
                    <prop key="hibernate.format_sql">#{sql_dao[hibernate_format_sql]}</prop>
                    <prop key="hibernate.show_sql">#{sql_dao[hibernate_show_sql]}</prop>

                    <!--<prop key="hibernate.generate_statistics">true</prop>-->
                </props>
            </property>
        </bean>

        <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
            <property name="driverClassName" value="org.postgresql.ds.PGSimpleDataSource" />
            <property name="url" value="jdbc:postgresql://localhost:5432/kaa" />
            <property name="username" value="postgres" />
            <property name="password" value="admin" />
        </bean>

    </beans>

    <beans profile="mariadb">

        <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
            <property name="dataSource" ref="dataSource"/>
            <property name="packagesToScan" value="org.kaaproject.kaa.server.common.dao.model.sql"/>
            <property name="hibernateProperties">
                <props>
                    <prop key="hibernate.hbm2ddl.auto">#{sql_dao[hibernate_hbm2ddl_auto]}</prop>
                    <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
                    <prop key="hibernate.format_sql">#{sql_dao[hibernate_format_sql]}</prop>
                    <prop key="hibernate.show_sql">#{sql_dao[hibernate_show_sql]}</prop>

                    <!--<prop key="hibernate.generate_statistics">true</prop>-->
                </props>
            </property>
        </bean>

        <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="org.mariadb.jdbc.MariaDbDataSource" />
        <property name="url" value="jdbc:mysql:failover://localhost:3306/kaa" />
        <property name="username" value="sqladmin" />
        <property name="password" value="admin" />
        </bean>
    </beans>

    <beans profile="h2">

        <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
            <property name="dataSource" ref="dataSource"/>
            <property name="packagesToScan" value="org.kaaproject.kaa.server.common.dao.model.sql"/>
            <property name="hibernateProperties">
                <props>
                    <prop key="hibernate.hbm2ddl.auto">#{sql_dao[hibernate_hbm2ddl_auto]}</prop>
                    <prop key="hibernate.dialect">#{sql_dao[hibernate_dialect]}</prop>
                    <prop key="hibernate.format_sql">#{sql_dao[hibernate_format_sql]}</prop>
                    <prop key="hibernate.show_sql">#{sql_dao[hibernate_show_sql]}</prop>
                </props>
            </property>
        </bean>

        <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
            <property name="poolName" value="SpringHikariCP" />
            <property name="connectionTestQuery" value="VALUES 1" />
            <property name="dataSourceClassName" value="org.h2.jdbcx.JdbcDataSource" />
            <property name="connectionTimeout" value="10000" />
            <property name="maximumPoolSize" value="100" />
            <property name="idleTimeout" value="120000" />
            <property name="dataSourceProperties">
                <props>
                    <prop key="url">jdbc:#{sql_dao[jdbc_url_db_name]}:mem:kaa;DATABASE_TO_UPPER=true</prop>
                    <prop key="user">#{sql_dao[jdbc_username]}</prop>
                    <prop key="password">#{sql_dao[jdbc_password]}</prop>
                </props>
            </property>
        </bean>

        <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
            <constructor-arg ref="hikariConfig" />
        </bean>

        <!-- provides a H2 console to look into the db if necessary -->
        <!-- Connection instructions : go to http://localhost:11111 -->
        <bean id="org.h2.tools.Server-WebServer" class="org.h2.tools.Server"
              factory-method="createWebServer" depends-on="dataSource"
              init-method="start" lazy-init="false" destroy-method="stop">
            <constructor-arg value="-web,-webPort,11111"/>
        </bean>
    </beans>


</beans>