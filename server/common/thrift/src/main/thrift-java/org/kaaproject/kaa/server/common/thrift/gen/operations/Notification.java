/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *
 * @generated
 */
package org.kaaproject.kaa.server.common.thrift.gen.operations;

import org.apache.thrift.EncodingUtils;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;
import org.apache.thrift.scheme.TupleScheme;

import java.util.ArrayList;
import java.util.BitSet;
import java.util.Collections;
import java.util.EnumMap;
import java.util.EnumSet;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Generated;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-4-19")
public class Notification implements org.apache.thrift.TBase<Notification, Notification._Fields>, java.io.Serializable, Cloneable, Comparable<Notification> {
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Notification");
  private static final org.apache.thrift.protocol.TField APP_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("appId", org.apache.thrift.protocol.TType.STRING, (short) 1);
  private static final org.apache.thrift.protocol.TField APP_SEQ_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("appSeqNumber", org.apache.thrift.protocol.TType.I32, (short) 2);
  private static final org.apache.thrift.protocol.TField GROUP_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("groupId", org.apache.thrift.protocol.TType.STRING, (short) 3);
  private static final org.apache.thrift.protocol.TField GROUP_SEQ_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("groupSeqNumber", org.apache.thrift.protocol.TType.I32, (short) 4);
  private static final org.apache.thrift.protocol.TField PROFILE_FILTER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("profileFilterId", org.apache.thrift.protocol.TType.STRING, (short) 5);
  private static final org.apache.thrift.protocol.TField PROFILE_FILTER_SEQ_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("profileFilterSeqNumber", org.apache.thrift.protocol.TType.I32, (short) 6);
  private static final org.apache.thrift.protocol.TField CONFIGURATION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("configurationId", org.apache.thrift.protocol.TType.STRING, (short) 7);
  private static final org.apache.thrift.protocol.TField CONFIGURATION_SEQ_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("configurationSeqNumber", org.apache.thrift.protocol.TType.I32, (short) 8);
  private static final org.apache.thrift.protocol.TField NOTIFICATION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("notificationId", org.apache.thrift.protocol.TType.STRING, (short) 9);
  private static final org.apache.thrift.protocol.TField TOPIC_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("topicId", org.apache.thrift.protocol.TType.STRING, (short) 10);
  private static final org.apache.thrift.protocol.TField OP_FIELD_DESC = new org.apache.thrift.protocol.TField("op", org.apache.thrift.protocol.TType.I32, (short) 11);
  private static final org.apache.thrift.protocol.TField APPENDER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("appenderId", org.apache.thrift.protocol.TType.STRING, (short) 12);
  private static final org.apache.thrift.protocol.TField USER_VERIFIER_TOKEN_FIELD_DESC = new org.apache.thrift.protocol.TField("userVerifierToken", org.apache.thrift.protocol.TType.STRING, (short) 13);
  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  // isset id assignments
  private static final int __APPSEQNUMBER_ISSET_ID = 0;
  private static final int __GROUPSEQNUMBER_ISSET_ID = 1;
  private static final int __PROFILEFILTERSEQNUMBER_ISSET_ID = 2;
  private static final int __CONFIGURATIONSEQNUMBER_ISSET_ID = 3;

  static {
    schemes.put(StandardScheme.class, new NotificationStandardSchemeFactory());
    schemes.put(TupleScheme.class, new NotificationTupleSchemeFactory());
  }

  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.APP_ID, new org.apache.thrift.meta_data.FieldMetaData("appId", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING, "id")));
    tmpMap.put(_Fields.APP_SEQ_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("appSeqNumber", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32, "Integer")));
    tmpMap.put(_Fields.GROUP_ID, new org.apache.thrift.meta_data.FieldMetaData("groupId", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING, "id")));
    tmpMap.put(_Fields.GROUP_SEQ_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("groupSeqNumber", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32, "Integer")));
    tmpMap.put(_Fields.PROFILE_FILTER_ID, new org.apache.thrift.meta_data.FieldMetaData("profileFilterId", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING, "id")));
    tmpMap.put(_Fields.PROFILE_FILTER_SEQ_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("profileFilterSeqNumber", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32, "Integer")));
    tmpMap.put(_Fields.CONFIGURATION_ID, new org.apache.thrift.meta_data.FieldMetaData("configurationId", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING, "id")));
    tmpMap.put(_Fields.CONFIGURATION_SEQ_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("configurationSeqNumber", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32, "Integer")));
    tmpMap.put(_Fields.NOTIFICATION_ID, new org.apache.thrift.meta_data.FieldMetaData("notificationId", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING, "id")));
    tmpMap.put(_Fields.TOPIC_ID, new org.apache.thrift.meta_data.FieldMetaData("topicId", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING, "id")));
    tmpMap.put(_Fields.OP, new org.apache.thrift.meta_data.FieldMetaData("op", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, Operation.class)));
    tmpMap.put(_Fields.APPENDER_ID, new org.apache.thrift.meta_data.FieldMetaData("appenderId", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING, "id")));
    tmpMap.put(_Fields.USER_VERIFIER_TOKEN, new org.apache.thrift.meta_data.FieldMetaData("userVerifierToken", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Notification.class, metaDataMap);
  }

  public String appId; // required
  public int appSeqNumber; // required
  public String groupId; // required
  public int groupSeqNumber; // required
  public String profileFilterId; // required
  public int profileFilterSeqNumber; // required
  public String configurationId; // required
  public int configurationSeqNumber; // required
  public String notificationId; // required
  public String topicId; // required
  /**
   * @see Operation
   */
  public Operation op; // required
  public String appenderId; // required
  public String userVerifierToken; // required
  private byte __isset_bitfield = 0;

  public Notification() {
  }

  public Notification(
      String appId,
      int appSeqNumber,
      String groupId,
      int groupSeqNumber,
      String profileFilterId,
      int profileFilterSeqNumber,
      String configurationId,
      int configurationSeqNumber,
      String notificationId,
      String topicId,
      Operation op,
      String appenderId,
      String userVerifierToken) {
    this();
    this.appId = appId;
    this.appSeqNumber = appSeqNumber;
    setAppSeqNumberIsSet(true);
    this.groupId = groupId;
    this.groupSeqNumber = groupSeqNumber;
    setGroupSeqNumberIsSet(true);
    this.profileFilterId = profileFilterId;
    this.profileFilterSeqNumber = profileFilterSeqNumber;
    setProfileFilterSeqNumberIsSet(true);
    this.configurationId = configurationId;
    this.configurationSeqNumber = configurationSeqNumber;
    setConfigurationSeqNumberIsSet(true);
    this.notificationId = notificationId;
    this.topicId = topicId;
    this.op = op;
    this.appenderId = appenderId;
    this.userVerifierToken = userVerifierToken;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Notification(Notification other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetAppId()) {
      this.appId = other.appId;
    }
    this.appSeqNumber = other.appSeqNumber;
    if (other.isSetGroupId()) {
      this.groupId = other.groupId;
    }
    this.groupSeqNumber = other.groupSeqNumber;
    if (other.isSetProfileFilterId()) {
      this.profileFilterId = other.profileFilterId;
    }
    this.profileFilterSeqNumber = other.profileFilterSeqNumber;
    if (other.isSetConfigurationId()) {
      this.configurationId = other.configurationId;
    }
    this.configurationSeqNumber = other.configurationSeqNumber;
    if (other.isSetNotificationId()) {
      this.notificationId = other.notificationId;
    }
    if (other.isSetTopicId()) {
      this.topicId = other.topicId;
    }
    if (other.isSetOp()) {
      this.op = other.op;
    }
    if (other.isSetAppenderId()) {
      this.appenderId = other.appenderId;
    }
    if (other.isSetUserVerifierToken()) {
      this.userVerifierToken = other.userVerifierToken;
    }
  }

  public Notification deepCopy() {
    return new Notification(this);
  }

  @Override
  public void clear() {
    this.appId = null;
    setAppSeqNumberIsSet(false);
    this.appSeqNumber = 0;
    this.groupId = null;
    setGroupSeqNumberIsSet(false);
    this.groupSeqNumber = 0;
    this.profileFilterId = null;
    setProfileFilterSeqNumberIsSet(false);
    this.profileFilterSeqNumber = 0;
    this.configurationId = null;
    setConfigurationSeqNumberIsSet(false);
    this.configurationSeqNumber = 0;
    this.notificationId = null;
    this.topicId = null;
    this.op = null;
    this.appenderId = null;
    this.userVerifierToken = null;
  }

  public String getAppId() {
    return this.appId;
  }

  public Notification setAppId(String appId) {
    this.appId = appId;
    return this;
  }

  public void unsetAppId() {
    this.appId = null;
  }

  /**
   * Returns true if field appId is set (has been assigned a value) and false otherwise
   */
  public boolean isSetAppId() {
    return this.appId != null;
  }

  public void setAppIdIsSet(boolean value) {
    if (!value) {
      this.appId = null;
    }
  }

  public int getAppSeqNumber() {
    return this.appSeqNumber;
  }

  public Notification setAppSeqNumber(int appSeqNumber) {
    this.appSeqNumber = appSeqNumber;
    setAppSeqNumberIsSet(true);
    return this;
  }

  public void unsetAppSeqNumber() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __APPSEQNUMBER_ISSET_ID);
  }

  /**
   * Returns true if field appSeqNumber is set (has been assigned a value) and false otherwise
   */
  public boolean isSetAppSeqNumber() {
    return EncodingUtils.testBit(__isset_bitfield, __APPSEQNUMBER_ISSET_ID);
  }

  public void setAppSeqNumberIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __APPSEQNUMBER_ISSET_ID, value);
  }

  public String getGroupId() {
    return this.groupId;
  }

  public Notification setGroupId(String groupId) {
    this.groupId = groupId;
    return this;
  }

  public void unsetGroupId() {
    this.groupId = null;
  }

  /**
   * Returns true if field groupId is set (has been assigned a value) and false otherwise
   */
  public boolean isSetGroupId() {
    return this.groupId != null;
  }

  public void setGroupIdIsSet(boolean value) {
    if (!value) {
      this.groupId = null;
    }
  }

  public int getGroupSeqNumber() {
    return this.groupSeqNumber;
  }

  public Notification setGroupSeqNumber(int groupSeqNumber) {
    this.groupSeqNumber = groupSeqNumber;
    setGroupSeqNumberIsSet(true);
    return this;
  }

  public void unsetGroupSeqNumber() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __GROUPSEQNUMBER_ISSET_ID);
  }

  /**
   * Returns true if field groupSeqNumber is set (has been assigned a value) and false otherwise
   */
  public boolean isSetGroupSeqNumber() {
    return EncodingUtils.testBit(__isset_bitfield, __GROUPSEQNUMBER_ISSET_ID);
  }

  public void setGroupSeqNumberIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __GROUPSEQNUMBER_ISSET_ID, value);
  }

  public String getProfileFilterId() {
    return this.profileFilterId;
  }

  public Notification setProfileFilterId(String profileFilterId) {
    this.profileFilterId = profileFilterId;
    return this;
  }

  public void unsetProfileFilterId() {
    this.profileFilterId = null;
  }

  /**
   * Returns true if field profileFilterId is set (has been assigned a value) and false otherwise
   */
  public boolean isSetProfileFilterId() {
    return this.profileFilterId != null;
  }

  public void setProfileFilterIdIsSet(boolean value) {
    if (!value) {
      this.profileFilterId = null;
    }
  }

  public int getProfileFilterSeqNumber() {
    return this.profileFilterSeqNumber;
  }

  public Notification setProfileFilterSeqNumber(int profileFilterSeqNumber) {
    this.profileFilterSeqNumber = profileFilterSeqNumber;
    setProfileFilterSeqNumberIsSet(true);
    return this;
  }

  public void unsetProfileFilterSeqNumber() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PROFILEFILTERSEQNUMBER_ISSET_ID);
  }

  /**
   * Returns true if field profileFilterSeqNumber is set (has been assigned a value) and false
   * otherwise
   */
  public boolean isSetProfileFilterSeqNumber() {
    return EncodingUtils.testBit(__isset_bitfield, __PROFILEFILTERSEQNUMBER_ISSET_ID);
  }

  public void setProfileFilterSeqNumberIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PROFILEFILTERSEQNUMBER_ISSET_ID, value);
  }

  public String getConfigurationId() {
    return this.configurationId;
  }

  public Notification setConfigurationId(String configurationId) {
    this.configurationId = configurationId;
    return this;
  }

  public void unsetConfigurationId() {
    this.configurationId = null;
  }

  /**
   * Returns true if field configurationId is set (has been assigned a value) and false otherwise
   */
  public boolean isSetConfigurationId() {
    return this.configurationId != null;
  }

  public void setConfigurationIdIsSet(boolean value) {
    if (!value) {
      this.configurationId = null;
    }
  }

  public int getConfigurationSeqNumber() {
    return this.configurationSeqNumber;
  }

  public Notification setConfigurationSeqNumber(int configurationSeqNumber) {
    this.configurationSeqNumber = configurationSeqNumber;
    setConfigurationSeqNumberIsSet(true);
    return this;
  }

  public void unsetConfigurationSeqNumber() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CONFIGURATIONSEQNUMBER_ISSET_ID);
  }

  /**
   * Returns true if field configurationSeqNumber is set (has been assigned a value) and false
   * otherwise
   */
  public boolean isSetConfigurationSeqNumber() {
    return EncodingUtils.testBit(__isset_bitfield, __CONFIGURATIONSEQNUMBER_ISSET_ID);
  }

  public void setConfigurationSeqNumberIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CONFIGURATIONSEQNUMBER_ISSET_ID, value);
  }

  public String getNotificationId() {
    return this.notificationId;
  }

  public Notification setNotificationId(String notificationId) {
    this.notificationId = notificationId;
    return this;
  }

  public void unsetNotificationId() {
    this.notificationId = null;
  }

  /**
   * Returns true if field notificationId is set (has been assigned a value) and false otherwise
   */
  public boolean isSetNotificationId() {
    return this.notificationId != null;
  }

  public void setNotificationIdIsSet(boolean value) {
    if (!value) {
      this.notificationId = null;
    }
  }

  public String getTopicId() {
    return this.topicId;
  }

  public Notification setTopicId(String topicId) {
    this.topicId = topicId;
    return this;
  }

  public void unsetTopicId() {
    this.topicId = null;
  }

  /**
   * Returns true if field topicId is set (has been assigned a value) and false otherwise
   */
  public boolean isSetTopicId() {
    return this.topicId != null;
  }

  public void setTopicIdIsSet(boolean value) {
    if (!value) {
      this.topicId = null;
    }
  }

  /**
   * @see Operation
   */
  public Operation getOp() {
    return this.op;
  }

  /**
   * @see Operation
   */
  public Notification setOp(Operation op) {
    this.op = op;
    return this;
  }

  public void unsetOp() {
    this.op = null;
  }

  /**
   * Returns true if field op is set (has been assigned a value) and false otherwise
   */
  public boolean isSetOp() {
    return this.op != null;
  }

  public void setOpIsSet(boolean value) {
    if (!value) {
      this.op = null;
    }
  }

  public String getAppenderId() {
    return this.appenderId;
  }

  public Notification setAppenderId(String appenderId) {
    this.appenderId = appenderId;
    return this;
  }

  public void unsetAppenderId() {
    this.appenderId = null;
  }

  /**
   * Returns true if field appenderId is set (has been assigned a value) and false otherwise
   */
  public boolean isSetAppenderId() {
    return this.appenderId != null;
  }

  public void setAppenderIdIsSet(boolean value) {
    if (!value) {
      this.appenderId = null;
    }
  }

  public String getUserVerifierToken() {
    return this.userVerifierToken;
  }

  public Notification setUserVerifierToken(String userVerifierToken) {
    this.userVerifierToken = userVerifierToken;
    return this;
  }

  public void unsetUserVerifierToken() {
    this.userVerifierToken = null;
  }

  /**
   * Returns true if field userVerifierToken is set (has been assigned a value) and false otherwise
   */
  public boolean isSetUserVerifierToken() {
    return this.userVerifierToken != null;
  }

  public void setUserVerifierTokenIsSet(boolean value) {
    if (!value) {
      this.userVerifierToken = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
      case APP_ID:
        if (value == null) {
          unsetAppId();
        } else {
          setAppId((String) value);
        }
        break;

      case APP_SEQ_NUMBER:
        if (value == null) {
          unsetAppSeqNumber();
        } else {
          setAppSeqNumber((Integer) value);
        }
        break;

      case GROUP_ID:
        if (value == null) {
          unsetGroupId();
        } else {
          setGroupId((String) value);
        }
        break;

      case GROUP_SEQ_NUMBER:
        if (value == null) {
          unsetGroupSeqNumber();
        } else {
          setGroupSeqNumber((Integer) value);
        }
        break;

      case PROFILE_FILTER_ID:
        if (value == null) {
          unsetProfileFilterId();
        } else {
          setProfileFilterId((String) value);
        }
        break;

      case PROFILE_FILTER_SEQ_NUMBER:
        if (value == null) {
          unsetProfileFilterSeqNumber();
        } else {
          setProfileFilterSeqNumber((Integer) value);
        }
        break;

      case CONFIGURATION_ID:
        if (value == null) {
          unsetConfigurationId();
        } else {
          setConfigurationId((String) value);
        }
        break;

      case CONFIGURATION_SEQ_NUMBER:
        if (value == null) {
          unsetConfigurationSeqNumber();
        } else {
          setConfigurationSeqNumber((Integer) value);
        }
        break;

      case NOTIFICATION_ID:
        if (value == null) {
          unsetNotificationId();
        } else {
          setNotificationId((String) value);
        }
        break;

      case TOPIC_ID:
        if (value == null) {
          unsetTopicId();
        } else {
          setTopicId((String) value);
        }
        break;

      case OP:
        if (value == null) {
          unsetOp();
        } else {
          setOp((Operation) value);
        }
        break;

      case APPENDER_ID:
        if (value == null) {
          unsetAppenderId();
        } else {
          setAppenderId((String) value);
        }
        break;

      case USER_VERIFIER_TOKEN:
        if (value == null) {
          unsetUserVerifierToken();
        } else {
          setUserVerifierToken((String) value);
        }
        break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
      case APP_ID:
        return getAppId();

      case APP_SEQ_NUMBER:
        return Integer.valueOf(getAppSeqNumber());

      case GROUP_ID:
        return getGroupId();

      case GROUP_SEQ_NUMBER:
        return Integer.valueOf(getGroupSeqNumber());

      case PROFILE_FILTER_ID:
        return getProfileFilterId();

      case PROFILE_FILTER_SEQ_NUMBER:
        return Integer.valueOf(getProfileFilterSeqNumber());

      case CONFIGURATION_ID:
        return getConfigurationId();

      case CONFIGURATION_SEQ_NUMBER:
        return Integer.valueOf(getConfigurationSeqNumber());

      case NOTIFICATION_ID:
        return getNotificationId();

      case TOPIC_ID:
        return getTopicId();

      case OP:
        return getOp();

      case APPENDER_ID:
        return getAppenderId();

      case USER_VERIFIER_TOKEN:
        return getUserVerifierToken();

    }
    throw new IllegalStateException();
  }

  /**
   * Returns true if field corresponding to fieldID is set (has been assigned a value) and false
   * otherwise
   */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
      case APP_ID:
        return isSetAppId();
      case APP_SEQ_NUMBER:
        return isSetAppSeqNumber();
      case GROUP_ID:
        return isSetGroupId();
      case GROUP_SEQ_NUMBER:
        return isSetGroupSeqNumber();
      case PROFILE_FILTER_ID:
        return isSetProfileFilterId();
      case PROFILE_FILTER_SEQ_NUMBER:
        return isSetProfileFilterSeqNumber();
      case CONFIGURATION_ID:
        return isSetConfigurationId();
      case CONFIGURATION_SEQ_NUMBER:
        return isSetConfigurationSeqNumber();
      case NOTIFICATION_ID:
        return isSetNotificationId();
      case TOPIC_ID:
        return isSetTopicId();
      case OP:
        return isSetOp();
      case APPENDER_ID:
        return isSetAppenderId();
      case USER_VERIFIER_TOKEN:
        return isSetUserVerifierToken();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof Notification)
      return this.equals((Notification) that);
    return false;
  }

  public boolean equals(Notification that) {
    if (that == null)
      return false;

    boolean this_present_appId = true && this.isSetAppId();
    boolean that_present_appId = true && that.isSetAppId();
    if (this_present_appId || that_present_appId) {
      if (!(this_present_appId && that_present_appId))
        return false;
      if (!this.appId.equals(that.appId))
        return false;
    }

    boolean this_present_appSeqNumber = true;
    boolean that_present_appSeqNumber = true;
    if (this_present_appSeqNumber || that_present_appSeqNumber) {
      if (!(this_present_appSeqNumber && that_present_appSeqNumber))
        return false;
      if (this.appSeqNumber != that.appSeqNumber)
        return false;
    }

    boolean this_present_groupId = true && this.isSetGroupId();
    boolean that_present_groupId = true && that.isSetGroupId();
    if (this_present_groupId || that_present_groupId) {
      if (!(this_present_groupId && that_present_groupId))
        return false;
      if (!this.groupId.equals(that.groupId))
        return false;
    }

    boolean this_present_groupSeqNumber = true;
    boolean that_present_groupSeqNumber = true;
    if (this_present_groupSeqNumber || that_present_groupSeqNumber) {
      if (!(this_present_groupSeqNumber && that_present_groupSeqNumber))
        return false;
      if (this.groupSeqNumber != that.groupSeqNumber)
        return false;
    }

    boolean this_present_profileFilterId = true && this.isSetProfileFilterId();
    boolean that_present_profileFilterId = true && that.isSetProfileFilterId();
    if (this_present_profileFilterId || that_present_profileFilterId) {
      if (!(this_present_profileFilterId && that_present_profileFilterId))
        return false;
      if (!this.profileFilterId.equals(that.profileFilterId))
        return false;
    }

    boolean this_present_profileFilterSeqNumber = true;
    boolean that_present_profileFilterSeqNumber = true;
    if (this_present_profileFilterSeqNumber || that_present_profileFilterSeqNumber) {
      if (!(this_present_profileFilterSeqNumber && that_present_profileFilterSeqNumber))
        return false;
      if (this.profileFilterSeqNumber != that.profileFilterSeqNumber)
        return false;
    }

    boolean this_present_configurationId = true && this.isSetConfigurationId();
    boolean that_present_configurationId = true && that.isSetConfigurationId();
    if (this_present_configurationId || that_present_configurationId) {
      if (!(this_present_configurationId && that_present_configurationId))
        return false;
      if (!this.configurationId.equals(that.configurationId))
        return false;
    }

    boolean this_present_configurationSeqNumber = true;
    boolean that_present_configurationSeqNumber = true;
    if (this_present_configurationSeqNumber || that_present_configurationSeqNumber) {
      if (!(this_present_configurationSeqNumber && that_present_configurationSeqNumber))
        return false;
      if (this.configurationSeqNumber != that.configurationSeqNumber)
        return false;
    }

    boolean this_present_notificationId = true && this.isSetNotificationId();
    boolean that_present_notificationId = true && that.isSetNotificationId();
    if (this_present_notificationId || that_present_notificationId) {
      if (!(this_present_notificationId && that_present_notificationId))
        return false;
      if (!this.notificationId.equals(that.notificationId))
        return false;
    }

    boolean this_present_topicId = true && this.isSetTopicId();
    boolean that_present_topicId = true && that.isSetTopicId();
    if (this_present_topicId || that_present_topicId) {
      if (!(this_present_topicId && that_present_topicId))
        return false;
      if (!this.topicId.equals(that.topicId))
        return false;
    }

    boolean this_present_op = true && this.isSetOp();
    boolean that_present_op = true && that.isSetOp();
    if (this_present_op || that_present_op) {
      if (!(this_present_op && that_present_op))
        return false;
      if (!this.op.equals(that.op))
        return false;
    }

    boolean this_present_appenderId = true && this.isSetAppenderId();
    boolean that_present_appenderId = true && that.isSetAppenderId();
    if (this_present_appenderId || that_present_appenderId) {
      if (!(this_present_appenderId && that_present_appenderId))
        return false;
      if (!this.appenderId.equals(that.appenderId))
        return false;
    }

    boolean this_present_userVerifierToken = true && this.isSetUserVerifierToken();
    boolean that_present_userVerifierToken = true && that.isSetUserVerifierToken();
    if (this_present_userVerifierToken || that_present_userVerifierToken) {
      if (!(this_present_userVerifierToken && that_present_userVerifierToken))
        return false;
      if (!this.userVerifierToken.equals(that.userVerifierToken))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_appId = true && (isSetAppId());
    list.add(present_appId);
    if (present_appId)
      list.add(appId);

    boolean present_appSeqNumber = true;
    list.add(present_appSeqNumber);
    if (present_appSeqNumber)
      list.add(appSeqNumber);

    boolean present_groupId = true && (isSetGroupId());
    list.add(present_groupId);
    if (present_groupId)
      list.add(groupId);

    boolean present_groupSeqNumber = true;
    list.add(present_groupSeqNumber);
    if (present_groupSeqNumber)
      list.add(groupSeqNumber);

    boolean present_profileFilterId = true && (isSetProfileFilterId());
    list.add(present_profileFilterId);
    if (present_profileFilterId)
      list.add(profileFilterId);

    boolean present_profileFilterSeqNumber = true;
    list.add(present_profileFilterSeqNumber);
    if (present_profileFilterSeqNumber)
      list.add(profileFilterSeqNumber);

    boolean present_configurationId = true && (isSetConfigurationId());
    list.add(present_configurationId);
    if (present_configurationId)
      list.add(configurationId);

    boolean present_configurationSeqNumber = true;
    list.add(present_configurationSeqNumber);
    if (present_configurationSeqNumber)
      list.add(configurationSeqNumber);

    boolean present_notificationId = true && (isSetNotificationId());
    list.add(present_notificationId);
    if (present_notificationId)
      list.add(notificationId);

    boolean present_topicId = true && (isSetTopicId());
    list.add(present_topicId);
    if (present_topicId)
      list.add(topicId);

    boolean present_op = true && (isSetOp());
    list.add(present_op);
    if (present_op)
      list.add(op.getValue());

    boolean present_appenderId = true && (isSetAppenderId());
    list.add(present_appenderId);
    if (present_appenderId)
      list.add(appenderId);

    boolean present_userVerifierToken = true && (isSetUserVerifierToken());
    list.add(present_userVerifierToken);
    if (present_userVerifierToken)
      list.add(userVerifierToken);

    return list.hashCode();
  }

  @Override
  public int compareTo(Notification other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetAppId()).compareTo(other.isSetAppId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appId, other.appId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAppSeqNumber()).compareTo(other.isSetAppSeqNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppSeqNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appSeqNumber, other.appSeqNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGroupId()).compareTo(other.isSetGroupId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGroupId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.groupId, other.groupId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGroupSeqNumber()).compareTo(other.isSetGroupSeqNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGroupSeqNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.groupSeqNumber, other.groupSeqNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProfileFilterId()).compareTo(other.isSetProfileFilterId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProfileFilterId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.profileFilterId, other.profileFilterId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProfileFilterSeqNumber()).compareTo(other.isSetProfileFilterSeqNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProfileFilterSeqNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.profileFilterSeqNumber, other.profileFilterSeqNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetConfigurationId()).compareTo(other.isSetConfigurationId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetConfigurationId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.configurationId, other.configurationId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetConfigurationSeqNumber()).compareTo(other.isSetConfigurationSeqNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetConfigurationSeqNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.configurationSeqNumber, other.configurationSeqNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNotificationId()).compareTo(other.isSetNotificationId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotificationId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notificationId, other.notificationId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTopicId()).compareTo(other.isSetTopicId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTopicId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.topicId, other.topicId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOp()).compareTo(other.isSetOp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.op, other.op);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAppenderId()).compareTo(other.isSetAppenderId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppenderId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appenderId, other.appenderId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserVerifierToken()).compareTo(other.isSetUserVerifierToken());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserVerifierToken()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userVerifierToken, other.userVerifierToken);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("Notification(");
    boolean first = true;

    sb.append("appId:");
    if (this.appId == null) {
      sb.append("null");
    } else {
      sb.append(this.appId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("appSeqNumber:");
    sb.append(this.appSeqNumber);
    first = false;
    if (!first) sb.append(", ");
    sb.append("groupId:");
    if (this.groupId == null) {
      sb.append("null");
    } else {
      sb.append(this.groupId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("groupSeqNumber:");
    sb.append(this.groupSeqNumber);
    first = false;
    if (!first) sb.append(", ");
    sb.append("profileFilterId:");
    if (this.profileFilterId == null) {
      sb.append("null");
    } else {
      sb.append(this.profileFilterId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("profileFilterSeqNumber:");
    sb.append(this.profileFilterSeqNumber);
    first = false;
    if (!first) sb.append(", ");
    sb.append("configurationId:");
    if (this.configurationId == null) {
      sb.append("null");
    } else {
      sb.append(this.configurationId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("configurationSeqNumber:");
    sb.append(this.configurationSeqNumber);
    first = false;
    if (!first) sb.append(", ");
    sb.append("notificationId:");
    if (this.notificationId == null) {
      sb.append("null");
    } else {
      sb.append(this.notificationId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("topicId:");
    if (this.topicId == null) {
      sb.append("null");
    } else {
      sb.append(this.topicId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("op:");
    if (this.op == null) {
      sb.append("null");
    } else {
      sb.append(this.op);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("appenderId:");
    if (this.appenderId == null) {
      sb.append("null");
    } else {
      sb.append(this.appenderId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("userVerifierToken:");
    if (this.userVerifierToken == null) {
      sb.append("null");
    } else {
      sb.append(this.userVerifierToken);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  /**
   * The set of fields this struct contains, along with convenience methods for finding and
   * manipulating them.
   */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    APP_ID((short) 1, "appId"),
    APP_SEQ_NUMBER((short) 2, "appSeqNumber"),
    GROUP_ID((short) 3, "groupId"),
    GROUP_SEQ_NUMBER((short) 4, "groupSeqNumber"),
    PROFILE_FILTER_ID((short) 5, "profileFilterId"),
    PROFILE_FILTER_SEQ_NUMBER((short) 6, "profileFilterSeqNumber"),
    CONFIGURATION_ID((short) 7, "configurationId"),
    CONFIGURATION_SEQ_NUMBER((short) 8, "configurationSeqNumber"),
    NOTIFICATION_ID((short) 9, "notificationId"),
    TOPIC_ID((short) 10, "topicId"),
    /**
     * @see Operation
     */
    OP((short) 11, "op"),
    APPENDER_ID((short) 12, "appenderId"),
    USER_VERIFIER_TOKEN((short) 13, "userVerifierToken");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch (fieldId) {
        case 1: // APP_ID
          return APP_ID;
        case 2: // APP_SEQ_NUMBER
          return APP_SEQ_NUMBER;
        case 3: // GROUP_ID
          return GROUP_ID;
        case 4: // GROUP_SEQ_NUMBER
          return GROUP_SEQ_NUMBER;
        case 5: // PROFILE_FILTER_ID
          return PROFILE_FILTER_ID;
        case 6: // PROFILE_FILTER_SEQ_NUMBER
          return PROFILE_FILTER_SEQ_NUMBER;
        case 7: // CONFIGURATION_ID
          return CONFIGURATION_ID;
        case 8: // CONFIGURATION_SEQ_NUMBER
          return CONFIGURATION_SEQ_NUMBER;
        case 9: // NOTIFICATION_ID
          return NOTIFICATION_ID;
        case 10: // TOPIC_ID
          return TOPIC_ID;
        case 11: // OP
          return OP;
        case 12: // APPENDER_ID
          return APPENDER_ID;
        case 13: // USER_VERIFIER_TOKEN
          return USER_VERIFIER_TOKEN;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null)
        throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  private static class NotificationStandardSchemeFactory implements SchemeFactory {
    public NotificationStandardScheme getScheme() {
      return new NotificationStandardScheme();
    }
  }

  private static class NotificationStandardScheme extends StandardScheme<Notification> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Notification struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true) {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
          break;
        }
        switch (schemeField.id) {
          case 1: // APP_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.appId = iprot.readString();
              struct.setAppIdIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // APP_SEQ_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.appSeqNumber = iprot.readI32();
              struct.setAppSeqNumberIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // GROUP_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.groupId = iprot.readString();
              struct.setGroupIdIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // GROUP_SEQ_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.groupSeqNumber = iprot.readI32();
              struct.setGroupSeqNumberIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PROFILE_FILTER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.profileFilterId = iprot.readString();
              struct.setProfileFilterIdIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // PROFILE_FILTER_SEQ_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.profileFilterSeqNumber = iprot.readI32();
              struct.setProfileFilterSeqNumberIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CONFIGURATION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.configurationId = iprot.readString();
              struct.setConfigurationIdIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CONFIGURATION_SEQ_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.configurationSeqNumber = iprot.readI32();
              struct.setConfigurationSeqNumberIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // NOTIFICATION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.notificationId = iprot.readString();
              struct.setNotificationIdIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // TOPIC_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.topicId = iprot.readString();
              struct.setTopicIdIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // OP
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.op = org.kaaproject.kaa.server.common.thrift.gen.operations.Operation.findByValue(iprot.readI32());
              struct.setOpIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // APPENDER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.appenderId = iprot.readString();
              struct.setAppenderIdIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // USER_VERIFIER_TOKEN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.userVerifierToken = iprot.readString();
              struct.setUserVerifierTokenIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Notification struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.appId != null) {
        oprot.writeFieldBegin(APP_ID_FIELD_DESC);
        oprot.writeString(struct.appId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(APP_SEQ_NUMBER_FIELD_DESC);
      oprot.writeI32(struct.appSeqNumber);
      oprot.writeFieldEnd();
      if (struct.groupId != null) {
        oprot.writeFieldBegin(GROUP_ID_FIELD_DESC);
        oprot.writeString(struct.groupId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(GROUP_SEQ_NUMBER_FIELD_DESC);
      oprot.writeI32(struct.groupSeqNumber);
      oprot.writeFieldEnd();
      if (struct.profileFilterId != null) {
        oprot.writeFieldBegin(PROFILE_FILTER_ID_FIELD_DESC);
        oprot.writeString(struct.profileFilterId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PROFILE_FILTER_SEQ_NUMBER_FIELD_DESC);
      oprot.writeI32(struct.profileFilterSeqNumber);
      oprot.writeFieldEnd();
      if (struct.configurationId != null) {
        oprot.writeFieldBegin(CONFIGURATION_ID_FIELD_DESC);
        oprot.writeString(struct.configurationId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CONFIGURATION_SEQ_NUMBER_FIELD_DESC);
      oprot.writeI32(struct.configurationSeqNumber);
      oprot.writeFieldEnd();
      if (struct.notificationId != null) {
        oprot.writeFieldBegin(NOTIFICATION_ID_FIELD_DESC);
        oprot.writeString(struct.notificationId);
        oprot.writeFieldEnd();
      }
      if (struct.topicId != null) {
        oprot.writeFieldBegin(TOPIC_ID_FIELD_DESC);
        oprot.writeString(struct.topicId);
        oprot.writeFieldEnd();
      }
      if (struct.op != null) {
        oprot.writeFieldBegin(OP_FIELD_DESC);
        oprot.writeI32(struct.op.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.appenderId != null) {
        oprot.writeFieldBegin(APPENDER_ID_FIELD_DESC);
        oprot.writeString(struct.appenderId);
        oprot.writeFieldEnd();
      }
      if (struct.userVerifierToken != null) {
        oprot.writeFieldBegin(USER_VERIFIER_TOKEN_FIELD_DESC);
        oprot.writeString(struct.userVerifierToken);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class NotificationTupleSchemeFactory implements SchemeFactory {
    public NotificationTupleScheme getScheme() {
      return new NotificationTupleScheme();
    }
  }

  private static class NotificationTupleScheme extends TupleScheme<Notification> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Notification struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetAppId()) {
        optionals.set(0);
      }
      if (struct.isSetAppSeqNumber()) {
        optionals.set(1);
      }
      if (struct.isSetGroupId()) {
        optionals.set(2);
      }
      if (struct.isSetGroupSeqNumber()) {
        optionals.set(3);
      }
      if (struct.isSetProfileFilterId()) {
        optionals.set(4);
      }
      if (struct.isSetProfileFilterSeqNumber()) {
        optionals.set(5);
      }
      if (struct.isSetConfigurationId()) {
        optionals.set(6);
      }
      if (struct.isSetConfigurationSeqNumber()) {
        optionals.set(7);
      }
      if (struct.isSetNotificationId()) {
        optionals.set(8);
      }
      if (struct.isSetTopicId()) {
        optionals.set(9);
      }
      if (struct.isSetOp()) {
        optionals.set(10);
      }
      if (struct.isSetAppenderId()) {
        optionals.set(11);
      }
      if (struct.isSetUserVerifierToken()) {
        optionals.set(12);
      }
      oprot.writeBitSet(optionals, 13);
      if (struct.isSetAppId()) {
        oprot.writeString(struct.appId);
      }
      if (struct.isSetAppSeqNumber()) {
        oprot.writeI32(struct.appSeqNumber);
      }
      if (struct.isSetGroupId()) {
        oprot.writeString(struct.groupId);
      }
      if (struct.isSetGroupSeqNumber()) {
        oprot.writeI32(struct.groupSeqNumber);
      }
      if (struct.isSetProfileFilterId()) {
        oprot.writeString(struct.profileFilterId);
      }
      if (struct.isSetProfileFilterSeqNumber()) {
        oprot.writeI32(struct.profileFilterSeqNumber);
      }
      if (struct.isSetConfigurationId()) {
        oprot.writeString(struct.configurationId);
      }
      if (struct.isSetConfigurationSeqNumber()) {
        oprot.writeI32(struct.configurationSeqNumber);
      }
      if (struct.isSetNotificationId()) {
        oprot.writeString(struct.notificationId);
      }
      if (struct.isSetTopicId()) {
        oprot.writeString(struct.topicId);
      }
      if (struct.isSetOp()) {
        oprot.writeI32(struct.op.getValue());
      }
      if (struct.isSetAppenderId()) {
        oprot.writeString(struct.appenderId);
      }
      if (struct.isSetUserVerifierToken()) {
        oprot.writeString(struct.userVerifierToken);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Notification struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(13);
      if (incoming.get(0)) {
        struct.appId = iprot.readString();
        struct.setAppIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.appSeqNumber = iprot.readI32();
        struct.setAppSeqNumberIsSet(true);
      }
      if (incoming.get(2)) {
        struct.groupId = iprot.readString();
        struct.setGroupIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.groupSeqNumber = iprot.readI32();
        struct.setGroupSeqNumberIsSet(true);
      }
      if (incoming.get(4)) {
        struct.profileFilterId = iprot.readString();
        struct.setProfileFilterIdIsSet(true);
      }
      if (incoming.get(5)) {
        struct.profileFilterSeqNumber = iprot.readI32();
        struct.setProfileFilterSeqNumberIsSet(true);
      }
      if (incoming.get(6)) {
        struct.configurationId = iprot.readString();
        struct.setConfigurationIdIsSet(true);
      }
      if (incoming.get(7)) {
        struct.configurationSeqNumber = iprot.readI32();
        struct.setConfigurationSeqNumberIsSet(true);
      }
      if (incoming.get(8)) {
        struct.notificationId = iprot.readString();
        struct.setNotificationIdIsSet(true);
      }
      if (incoming.get(9)) {
        struct.topicId = iprot.readString();
        struct.setTopicIdIsSet(true);
      }
      if (incoming.get(10)) {
        struct.op = org.kaaproject.kaa.server.common.thrift.gen.operations.Operation.findByValue(iprot.readI32());
        struct.setOpIsSet(true);
      }
      if (incoming.get(11)) {
        struct.appenderId = iprot.readString();
        struct.setAppenderIdIsSet(true);
      }
      if (incoming.get(12)) {
        struct.userVerifierToken = iprot.readString();
        struct.setUserVerifierTokenIsSet(true);
      }
    }
  }

}

